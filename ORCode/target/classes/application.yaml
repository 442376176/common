server:
  port: 8080
bee:
  db:
    driverName: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/test?characterEncoding:UTF-8
    username: root
    password: 123456
spring:
  datasource:
    logSlowSql: true
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/test?characterEncoding:utf-8&serverTimezone:GMT%2B8&useTimezone:true&allowMultiQueries:true&useSSL:true
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: 123456
    maxPoolPreparedStatementPerConnectionSize: 20
    poolPreparedStatements: true
    minEvictableIdleTimeMillis: 300000
    timeBetweenEvictionRunsMillis: 60000
    maxWait: 60000
    maxActive: 10000
  redis:
    # 服務器地址
    host: 127.0.0.1
    # 服務器連接端口
    port: 6379
    # Redis數據庫索引（默认为0）
    database: 0
    # 連接超時時間(毫秒)
    timeout: 1800000
    # 連接池配置
    lettuce:
      pool:
        # 連接池最大連接數（使用負值表示沒有限制）
        max-active: 20
        # 最大阻塞等待時間(負數表示沒有限制)
        max-wait: -1
        # 連接池中的最大空閒連接
        max-idle: 5
        # 最小空閒連接
        min-idle: 0
#定义LOG输出级别
log4j:
  rootLogger: DEBUG,Console,File
  #定义日志输出目的地为控制台
  appender:
    Console: org.apache.log4j.ConsoleAppender
          Target: System.out
  #可以灵活地指定日志输出格式，下面一行是指定具体的格式
          layout : org.apache.log4j.PatternLayout
  #log4j.appender.Console.layout.ConversionPattern:[%c] - %m%n
            ConversionPattern: %d %p [%c] - %m%n
  #文件大小到达指定尺寸的时候产生一个新的文件
  File: org.apache.log4j.RollingFileAppender
  #指定输出目录
    File: logs/promote.log
  #定义文件最大大小
    MaxFileSize : 10MB
  # 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志
    Threshold : ALL
    layout : org.apache.log4j.PatternLayout
      ConversionPattern: [%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n
  ###显示mybatis的SQL语句部分，类似于hibernate在控制台打印sql语句那部分
  logger:
    java:
      sql:
      ResultSet: INFO
      Connection: DEBUG
      Statement: DEBUG
      PreparedStatement: DEBUG
    org:
    apache: INFO
